import { TelegramService } from './utils/telegram'
import * as fs from 'fs'
import { format } from 'date-fns'

// –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
const checkAndFixPaths = (): string => {
  const possiblePaths = [
    './yahoo-finance-data.xlsx',
    '/app/yahoo-finance-data.xlsx',
    '/app/data/yahoo-finance-data.xlsx'
  ]
  let foundPath = ''

  for (const path of possiblePaths) {
    if (fs.existsSync(path)) {
      foundPath = path
      console.log(`–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø–æ –ø—É—Ç–∏: ${path}`)
      break
    }
  }

  if (!foundPath) {
    throw new Error('–§–∞–π–ª yahoo-finance-data.xlsx –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–º –∏–∑ –æ–∂–∏–¥–∞–µ–º—ã—Ö –º–µ—Å—Ç')
  }

  return foundPath
}

async function main(): Promise<void> {
  try {
    console.log('–ó–∞–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram...')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –Ω–∞—Ö–æ–¥–∏–º —Ñ–∞–π–ª
    const fileName = checkAndFixPaths()

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ñ–∞–π–ª—É
    const stats = fs.statSync(fileName)
    const fileSize = (stats.size / 1024 / 1024).toFixed(2) // —Ä–∞–∑–º–µ—Ä –≤ –ú–ë

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
    const currentDate = format(new Date(), 'dd.MM.yyyy HH:mm')

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const caption = `üìä –ê–Ω–∞–ª–∏–∑ –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç ${currentDate}\n–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileSize} –ú–ë`

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ Telegram
    const telegramService = new TelegramService()
    await telegramService.sendMessage(
      `ü§ñ –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–∏–≤–∏–¥–µ–Ω–¥–æ–≤\nüìÖ –î–∞—Ç–∞: ${currentDate}`
    )
    await telegramService.sendFile(fileName, caption)

    console.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram')
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram:', error)
    process.exit(1)
  }
}

main().catch(error => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error)
  process.exit(1)
})
